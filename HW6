1.จงเขียนฟังก์ชันเรียกตัวเองชื่อ SUM เพื่อให้สามารถทำงานได้ดังการทำงานต่อไปนี้   

1/3 + 2/4  + 3/5  + 4/6  + … +  n/(n+2)      

ถ้าผู้ใช้เรียกใช้

    SUM(1)  ผลของการทำงานคือ 1/3
    SUM(2)  ผลของการทำงานคือ 1/3  + (2/4)
    SUM(n)  ผลของการทำงานคือ 1/3  + (2/4) + … +  n/(n+2)

#include<iostream>
using namespace std;
void Input (int&);
float SUM (int);
void Output (int);

int main(){
    int N;
    Input (N);
    SUM (N);
    Output (N);
    return 0;
}
void Input (int& N){
    cout<<"SUM(?)"; cin>>N;
    while (N<1){ cout<<"SUM(? >0)"; cin>>N; }
}
float SUM (int N){
    return (N==1) ? 1.0/3.0 : (N/(N+2.0))+SUM(N-1.0) ;
}
void Output (int N){
    cout<<"------------------------------------------------------------------"<<endl;
    cout<<" SUM("<<N<<") :"<<endl;
    for (int i=1; i<=N; i++){
        (i==1) ? cout<<" [ "<<i<<"/"<<i+2.0 : cout<<" + "<<i<<"/"<<i+2.0 ;
        (i%10==0&&i<N) ? cout<<endl : (i==N) ? cout<<" ]", cout<<endl : cout<<"" ;
    }
    cout<<" = "<<SUM(N)<<endl;
}

2.จงเขียนโปรแกรมรับข้อความ 1 ประโยค จงแยกคำจากประโยคและสรุปว่าประโยคนี้มีทั้งหมดกี่คำ

#include<iostream>
#include<string>
using namespace std;
void Input (string&);
void Find (string&, int&);
void Output (int&);

int main(){
    int Data;
    string Line;
    Input (Line);
    Find (Line, Data);
    Output (Data);
    return 0;
}
void Input (string& Line){
    cout<<"Put text."<<endl;
    getline(cin,Line,'\n');
}
void Find (string& Line, int& Data){
    string Data_add;
    int Len_add=Line.length();
    for (int i=0; i<Len_add; i++){
        (Line.at(i)==' ') ? Data_add+='0' : Data_add+='1' ;
    }
    int len=Data_add.length();
    for (int j=0; j<len; j++){
        if (j!=0){
            if (Data_add.at(j-1)=='1' && Data_add.at(j)=='0'){ Data+=1; }
        }    
    }
    if (Data_add.at(len-1)=='0'){ Data-=1; }
} 
void Output (int& Data){
    cout<<"= "<<Data+1<<" Words"<<endl;
}

3.จงเขียนโปรแกรมแปลงตัวอักษรภาษาอังกฤษตัวใหญ่ให้เป็นตัวเลขที่สอดคล้องกันกับปุ่มของโทรศัพท์มือถือ

                   อักษร           	           ปุ่มโทรศัพท์มือถือ
                ‘A’ ’B’ ‘C’                          2
                ‘D’ ’E’ ‘F’                          3
                ‘G’ ‘H’ ‘I’                          4
            	‘J’ ‘K’ ‘L’                          5
              	‘M’ ‘N’ ‘O’                          6  
             	‘P’ ‘Q’ ‘R’ ‘S’                      7
             	‘T’ ‘U’ ‘V’                          8
             	‘W’ ‘X’ ‘Y’ ‘Z’                      9
              
โดยการทำงานจะเปลี่ยนตัวอักษรทุกตัวที่ผู้ใช้ป้อนให้เป็นตัวเลข 

#include<iostream>
#include<string>
using namespace std;
void Input (string&);
void Compare_and_change (string&, string&);
void Output (string&);

int main(){
    string Text, Data;
    Input (Text);
    Compare_and_change (Text, Data);
    Output (Data);
    return 0;
}
void Input (string& Text){
    cout<<"Put text."<<endl;
    getline(cin,Text,'\n');
}
void Compare_and_change (string& Text, string& Data){
    int Len = Text.length();
    for (int i=0; i<Len; i++){       
        (Text.at(i)==' ') ? Data+=' ' :
        (Text.at(i)>='A' && Text.at(i)<='C') ? Data+='2' :
        (Text.at(i)>='D' && Text.at(i)<='F') ? Data+='3' :
        (Text.at(i)>='G' && Text.at(i)<='I') ? Data+='4' :
        (Text.at(i)>='J' && Text.at(i)<='L') ? Data+='5' :
        (Text.at(i)>='M' && Text.at(i)<='O') ? Data+='6' :
        (Text.at(i)>='P' && Text.at(i)<='S') ? Data+='7' :
        (Text.at(i)>='T' && Text.at(i)<='V') ? Data+='8' :
        (Text.at(i)>='W' && Text.at(i)<='Z') ? Data+='9' :
        Data+= '?';
    }
}
void Output (string& Data){
    cout<<"> "<<Data<<endl;
}

4.โปรแกรมเกมส์ทายตัวเลขโดยให้โปรแกรมสามารถสุ่มตัวเลขใดๆ จำนวน 4 หลักเพื่อให้ผู้เล่นทาย 
    - ผู้เล่นสามารถทายตัวเลขได้ครั้งละ 1 ตัว ถ้าตรงกับหลักใด แสดงว่าทายถูก โปรแกรมจะนำตัวเลขนี้ไปแทนในตำแหน่งที่ถูกต้อง ตัวเลขอาจซ้ำได้มากกว่า 1 หลัก
    - ผู้เล่นสามารถทายตัวเลขซ้ำๆจนกระทั่งทายถูกทุกหลักอย่างถูกต้อง
    - เมื่อเกมส์จบ โปรแกรมจะสรุปจำนวนครั้งที่ทายทั้งหมด  พิมพ์ออกมาทางจอภาพ
    
#include<iostream>
#include<string>
#include<unistd.h>
using namespace std;
void Line ();
void Start ();
void Guideline (string&);
void Loading ();
void Main_System (int&, int&, int&, int&, int&, int&, int&, int&, int&, bool&, bool&, bool&, bool&, bool&, bool&, bool&, bool&);
void Create_Number (int &, int&, int&, int&);
void Check (int&, int&, int&, int&, int&, int&, bool&, bool&, bool&, bool&, bool&, bool&, bool&, bool&);
void End ();

int main(){
    string Guide="";
    bool N1_Status=1, N2_Status=1, N3_Status=1, N4_Status=1, N1_Display=1, N2_Display=1, N3_Display=1, N4_Display=1;
    int  N_Form_User=-1, Loop_Status=0, Round=1, Chance_Guess=7, Text=0, N1=-1, N2=-1, N3=-1, N4=-1;
    
    Start ();
    Guideline (Guide);
    Loading ();

    do{
        Create_Number (N1, N2, N3, N4);
        do{
            Main_System (N_Form_User, Loop_Status, Round, Chance_Guess, Text, N1, N2, N3, N4, N1_Display, N2_Display, N3_Display, N4_Display, N1_Status, N2_Status, N3_Status, N4_Status);
            Check (N_Form_User, Text, N1, N2, N3, N4, N1_Display, N2_Display, N3_Display, N4_Display, N1_Status, N2_Status, N3_Status, N4_Status);
            Chance_Guess--;
            
            if ( ( Chance_Guess==0 && (N1_Status==1 || N2_Status==1 || N3_Status==1 || N4_Status==1) ) || (N1_Status==0 && N2_Status==0 && N3_Status==0 && N4_Status==0) ){ 
                Main_System (N_Form_User, Loop_Status, Round, Chance_Guess, Text, N1, N2, N3, N4, N1_Display, N2_Display, N3_Display, N4_Display, N1_Status, N2_Status, N3_Status, N4_Status);
                Loop_Status=1;
            }
        } while (Loop_Status==0);

        if ( N1_Status==0 && N2_Status==0 && N3_Status==0 && N4_Status==0 || Round==3 ){ Loop_Status=2; }
        else { 
          N_Form_User=-1, Loop_Status=0, Round++, Chance_Guess=7, Text=0, N1=-1, N2=-1, N3=-1, N4=-1, N1_Display=1, N2_Display=1, N3_Display=1, N4_Display=1, N1_Status=1, N2_Status=1, N3_Status=1, N4_Status=1 ;
        }
    } while (Loop_Status==1 || Loop_Status==0);
    End ();
    return 0;
}
void Line (){
    for (int i=1; i<=85; i++){ cout<<"_"; }cout<<"\n"<<endl;
}
void Start (){
    Line ();
    string X = "0111110000111000010000010011111000000100000100100000100100000100111110001111100111110|" 
               "0100000010000010010000010010000100000101000100100000100110001100100001001000000100001|"
               "0111110010000010010000010011110000000100100100100000100101010100111100001111100111100|"
               "0100000010000010010000010010010000000100010100100000100100100100100001001000000100100|"
               "0100000000111000000111000010000100000100000100001110000100100100111110001111100100001|";
    for (int i=0; i<X.length(); i++){
        (X.at(i)=='1') ? cout<<"▪" : cout<<" " ;
        (X.at(i)=='|') ? cout<<endl : cout<<"" ;
    }
    cout<<"\n Loading "; sleep(1); cout<<"."; sleep(1); cout<<"."; sleep(1); cout<<"."<<endl; sleep(1);
}
void Guideline (string& Guide){
    Line ();
    cout<<"  This is the guide of this game.\n"
          "  > There are four unique puzzle numbers.\n"
          "  > You can only guess one number at a time.\n"
          "  > If you can't guess four numbers within seven times, The four puzzle numbers will change.\n"
          "  > You can only play this game three times.\n\n"
          "  Press 'Enter' to start.\n\n";
    string Guid; getline(cin,Guid); while (Guid!=Guide){ getline(cin,Guid); }
}
void Loading (){
    Line ();
    cout<<"\n\n\n\n\n\n Loading "; sleep(1); cout<<"."; sleep(1); cout<<"."; sleep(1); cout<<"."<<endl;
}
void Main_System (int& N_Form_User, int& Loop_Status, int& Round, int& Chance_Guess, int& Text, int & N1, int& N2, int& N3, int& N4, bool& N1_Display, bool& N2_Display, bool& N3_Display, bool& N4_Display, bool& N1_Status, bool& N2_Status, bool& N3_Status, bool&N4_Status){
    Line ();
    cout<<"           ╔═════════════╗               Round : "; (Round==1) ? cout<<"First" : (Round==2) ? cout<<"Second" : cout<<"Last" ; cout<<endl;
    cout<<"           "; if (Round==3){ N1_Display=0; }
    (N1_Display==1) ? cout<<"  ?" : cout<<"  "<<N1 ;
    (N2_Display==1) ? cout<<"  ?" : cout<<"  "<<N2 ; 
    (N3_Display==1) ? cout<<"  ?" : cout<<"  "<<N3 ;
    (N4_Display==1) ? cout<<"  ?" : cout<<"  "<<N4 ; cout<<endl;
    cout<<"           ╚═════════════╝              Chance : "; for (int i=1; i<=Chance_Guess; i++){ cout<<"❤ "; } cout<<"\n\n"; sleep(1);
    
    if (Chance_Guess==0){
        if (N1_Status==1||N2_Status==1||N3_Status==1||N4_Status==1){
            if (Round==1){
            cout<<"  : Oh, Almost done."<<endl; sleep(1);
            cout<<"  : Don't worry!, I'll give you another chance to make amends.\n"<<endl;
            }
            else if (Round==2){
                cout<<"  : Ha ha ha!, If so, I'll tell you one number."<<endl;
                cout<<"  : This time is your last chance.\n"<<endl;
            }
            else if (Round==3){
                cout<<"  : Alright!, It might be really hard."<<endl; 
                cout<<"  : When you are ready, come again.\n"<<endl;
            }
            sleep(3); cout<<"Loading ."; sleep(1); cout<<"."; sleep(1); cout<<"."<<endl; sleep(1);
        }
    }
    else {
        if (Chance_Guess>0){ cout<<"  : ";
        (Text==0) ? cout<<"Guess it."<<endl : 
        (Text==1) ? cout<<"Wow!." <<endl : 
        (Text==2) ? cout<<"Ha Ha Ha!, You guessed wrong."<<endl : 
        (Text==3) ? cout<<"Yeah!, You lost one chance in vain."<<endl : cout<<"" ; sleep(1);
        }
        if (N1_Status==1||N2_Status==1||N3_Status==1||N4_Status==1){  
        (Text==0) ? cout<<"" : cout<<"  : Keep guessing."<<endl ; cout<<"\n\n";
        cin>>N_Form_User; while (N_Form_User<0||N_Form_User>9){ cin>>N_Form_User; } 
        }
    }
    if (N1_Status==0&&N2_Status==0&&N3_Status==0&&N4_Status==0){ 
        cout<<"  : Alright, You passed this test."<<endl; sleep(1);
        cout<<"  : See you at the next test.\n"<<endl; 
        sleep(2); cout<<"Loading "; sleep(1); cout<<"."; sleep(1); cout<<"."; sleep(1); cout<<"."<<endl;
    }
}
void Create_Number (int & N1, int& N2, int& N3, int& N4){
    N1=rand()%10;
    do { N2=rand()%10; } while (N1==N2);
    do { N3=rand()%10; } while (N1==N3||N2==N3);
    do { N4=rand()%10; } while (N1==N4||N2==N4||N3==N4);
}
void Check (int& N_Form_User, int& Text, int & N1, int& N2, int& N3, int& N4, bool& N1_Display, bool& N2_Display, bool& N3_Display, bool& N4_Display, bool& N1_Status, bool& N2_Status, bool& N3_Status, bool& N4_Status){
         if (N_Form_User==N1){ N1_Status=0; (N1_Display==1) ? N1_Display=0, Text=1 : Text=3 ; }
    else if (N_Form_User==N2){ N2_Status=0; (N2_Display==1) ? N2_Display=0, Text=1 : Text=3 ; }
    else if (N_Form_User==N3){ N3_Status=0; (N3_Display==1) ? N3_Display=0, Text=1 : Text=3 ; }
    else if (N_Form_User==N4){ N4_Status=0; (N4_Display==1) ? N4_Display=0, Text=1 : Text=3 ; }
    else    { Text=2; }
}
void End (){
    Line ();
    string X = "00000000000000000000000001111110010000010011111000000000000000000000000000|"
               "00000000000000000000000001000000010100010010000010000000000000000000000000|"
               "00000000000000000000000001111110010010010010000010000000000000000000000000|"
               "00000000000000000000000001000000010001010010000010000000000000000000000000|"
               "00000000000000000000000001111110010000010011111000000000000000000000000000|";
    for (int i=0; i<X.length(); i++){
        (X.at(i)=='1') ? cout<<"▪" : cout<<" " ;
        (X.at(i)=='|') ? cout<<endl : cout<<"" ;
    }
    Line ();
}
    
